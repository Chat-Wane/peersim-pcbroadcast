# network size
SIZE 1000
DEGREE 20

# parameters of periodic execution
CYCLES 100
CYCLE SIZE*10000

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 0
MAXDELAY 0
# drop is a probability, 0<=DROP<=1
DROP 0

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE
network.node GeneralNode

################### protocols ===========================
protocol.link peersim.core.IdleProtocol

protocol.lnk example.webrtc.cyclon2.Cyclon
protocol.lnk.cache DEGREE
protocol.lnk.l 5
protocol.lnk.step CYCLE
protocol.lnk.transport tr
protocol.lnk.linkable link

protocol.urt UniformRandomTransport
protocol.urt.mindelay (CYCLE*MINDELAY)/100
protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

################### initialization ======================

# Init each peer in lnk with K neighbours

init.rndlink WireKOut
init.rndlink.k 20
init.rndlink.protocol lnk

#init.vals LinearDistribution
#init.vals.protocol lnk
#init.vals.max SIZE
#init.vals.min 1

init.sch CDScheduler
init.sch.protocol lnk
init.sch.randstart

control.0 example.webrtc.cyclon2.CyclonObserver
control.0.protocol lnk
control.0.step CYCLE